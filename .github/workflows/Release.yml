name: GitHub Release with APKs

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    timeout-minutes: 120

    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: true
          gradle-home-cache-cleanup: true

      - name: Decode Keystore and create jks
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore.jks'
          encodedString: ${{ secrets.SIGNING_KEY }}

      - name: Generate keystore.properties
        run: |
          cat <<EOF > keystore.properties
          signing.storePassword:${{ secrets.KEY_STORE_PASSWORD }}
          signing.keyPassword:${{ secrets.KEY_PASSWORD }}
          signing.keyAlias:${{ secrets.ALIAS }}
          signing.storeFile: ${{ steps.decode_keystore.outputs.filePath }}
          EOF

      - name: Install GMD image for baseline profile generation
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager "system-images;android-33;aosp_atd;x86_64"

      - name: Build release variant including baseline profile generation
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew :app:assembleDemoRelease
          -Pandroid.testInstrumentationRunnerArguments.androidx.benchmark.enabledRules=BaselineProfile
          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
          -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true
          -Pandroid.experimental.androidTest.numManagedDeviceShards=1
          -Pandroid.experimental.testOptions.managedDevices.maxConcurrentDevices=1

      - name: Create Release and Upload Release Asset
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            app/build/outputs/**/*.apk

  generateModuleGraphs:
    name: 'generate module graphs'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: false
          gradle-home-cache-cleanup: false

      - name: Install Package
        run: sudo apt-get install graphviz
      - uses: actions/setup-node@v4
        with:
          node-version: 21.7.3
      - run: npm install --no-fund -g svgo

      - name: Generate Module Graphs And README
        run: |
          chmod +x generateModuleGraphs.sh
          ./generateModuleGraphs.sh --exclude-module :benchmarks \
          --exclude-module :lint \
          --exclude-module :ui-test-hilt-manifest

      - name: Upload Graphs
        uses: actions/upload-artifact@v4
        with:
          name: module_graphs
          path: 'docs/images/graphs/'